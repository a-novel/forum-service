// Code generated by mockery v2.20.0. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// ValidateImproveSuggestionService is an autogenerated mock type for the ValidateImproveSuggestionService type
type ValidateImproveSuggestionService struct {
	mock.Mock
}

type ValidateImproveSuggestionService_Expecter struct {
	mock *mock.Mock
}

func (_m *ValidateImproveSuggestionService) EXPECT() *ValidateImproveSuggestionService_Expecter {
	return &ValidateImproveSuggestionService_Expecter{mock: &_m.Mock}
}

// Validate provides a mock function with given fields: ctx, tokenRaw, validated, id
func (_m *ValidateImproveSuggestionService) Validate(ctx context.Context, tokenRaw string, validated bool, id uuid.UUID) error {
	ret := _m.Called(ctx, tokenRaw, validated, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, bool, uuid.UUID) error); ok {
		r0 = rf(ctx, tokenRaw, validated, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateImproveSuggestionService_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type ValidateImproveSuggestionService_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - ctx context.Context
//   - tokenRaw string
//   - validated bool
//   - id uuid.UUID
func (_e *ValidateImproveSuggestionService_Expecter) Validate(ctx interface{}, tokenRaw interface{}, validated interface{}, id interface{}) *ValidateImproveSuggestionService_Validate_Call {
	return &ValidateImproveSuggestionService_Validate_Call{Call: _e.mock.On("Validate", ctx, tokenRaw, validated, id)}
}

func (_c *ValidateImproveSuggestionService_Validate_Call) Run(run func(ctx context.Context, tokenRaw string, validated bool, id uuid.UUID)) *ValidateImproveSuggestionService_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(bool), args[3].(uuid.UUID))
	})
	return _c
}

func (_c *ValidateImproveSuggestionService_Validate_Call) Return(_a0 error) *ValidateImproveSuggestionService_Validate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ValidateImproveSuggestionService_Validate_Call) RunAndReturn(run func(context.Context, string, bool, uuid.UUID) error) *ValidateImproveSuggestionService_Validate_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewValidateImproveSuggestionService interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidateImproveSuggestionService creates a new instance of ValidateImproveSuggestionService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidateImproveSuggestionService(t mockConstructorTestingTNewValidateImproveSuggestionService) *ValidateImproveSuggestionService {
	mock := &ValidateImproveSuggestionService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
