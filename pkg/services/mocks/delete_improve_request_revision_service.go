// Code generated by mockery v2.20.0. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// DeleteImproveRequestRevisionService is an autogenerated mock type for the DeleteImproveRequestRevisionService type
type DeleteImproveRequestRevisionService struct {
	mock.Mock
}

type DeleteImproveRequestRevisionService_Expecter struct {
	mock *mock.Mock
}

func (_m *DeleteImproveRequestRevisionService) EXPECT() *DeleteImproveRequestRevisionService_Expecter {
	return &DeleteImproveRequestRevisionService_Expecter{mock: &_m.Mock}
}

// Delete provides a mock function with given fields: ctx, tokenRaw, id
func (_m *DeleteImproveRequestRevisionService) Delete(ctx context.Context, tokenRaw string, id uuid.UUID) error {
	ret := _m.Called(ctx, tokenRaw, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, uuid.UUID) error); ok {
		r0 = rf(ctx, tokenRaw, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteImproveRequestRevisionService_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type DeleteImproveRequestRevisionService_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - ctx context.Context
//   - tokenRaw string
//   - id uuid.UUID
func (_e *DeleteImproveRequestRevisionService_Expecter) Delete(ctx interface{}, tokenRaw interface{}, id interface{}) *DeleteImproveRequestRevisionService_Delete_Call {
	return &DeleteImproveRequestRevisionService_Delete_Call{Call: _e.mock.On("Delete", ctx, tokenRaw, id)}
}

func (_c *DeleteImproveRequestRevisionService_Delete_Call) Run(run func(ctx context.Context, tokenRaw string, id uuid.UUID)) *DeleteImproveRequestRevisionService_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(uuid.UUID))
	})
	return _c
}

func (_c *DeleteImproveRequestRevisionService_Delete_Call) Return(_a0 error) *DeleteImproveRequestRevisionService_Delete_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *DeleteImproveRequestRevisionService_Delete_Call) RunAndReturn(run func(context.Context, string, uuid.UUID) error) *DeleteImproveRequestRevisionService_Delete_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewDeleteImproveRequestRevisionService interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleteImproveRequestRevisionService creates a new instance of DeleteImproveRequestRevisionService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleteImproveRequestRevisionService(t mockConstructorTestingTNewDeleteImproveRequestRevisionService) *DeleteImproveRequestRevisionService {
	mock := &DeleteImproveRequestRevisionService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
